{"code":"import { Animals, SolarMonth, TermInfo } from \"../data/Calendar\";\n/**\n* 返回公历(!)y年m月的天数\n* @param solar Year\n* @return Number (-1、28、29、30、31)\n* @eg:var solarMonthDay = calendar.leapDays(1987) ;//solarMonthDay=30//月份参数从1至12，参数错误返回-1\n*/\nconst solarDays = (y, m) => {\n    if (m > 12 || m < 1) {\n        console.error(\"月份参数为1至12\");\n        return -1;\n    }\n    let ms = m - 1;\n    if (ms == 1) { //2月份的闰平规律测算后确认返回28或29\n        return (((y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0)) ? 29 : 28);\n    }\n    else {\n        return (SolarMonth[ms]);\n    }\n};\n/**\n* 返回公历(!)y年m月的第一天是星期几\n* @param solar Year\n* @return Number (-1、28、29、30、31)\n* @eg:var solarFirstWeek = calendar.solarFirstWeek(1987,1) ;//星期四\n*/\nconst solarFirstWeek = (y, m) => {\n    if (m > 12 || m < 1) {\n        console.error(\"月份参数为1至12\");\n        return -1;\n    }\n    let ms = m - 1;\n    let solarDate = new Date(y, ms, 1, 0, 0, 0, 0);\n    return solarDate.getDay();\n};\n/**\n * 公历月、日判断所属星座\n * @param  cMonth [description]\n * @param  cDay [description]\n * @return Cn string\n */\nconst toAstro = (cMonth, cDay) => {\n    let s = \"\\u9b54\\u7faf\\u6c34\\u74f6\\u53cc\\u9c7c\\u767d\\u7f8a\\u91d1\\u725b\\u53cc\\u5b50\\u5de8\\u87f9\\u72ee\\u5b50\\u5904\\u5973\\u5929\\u79e4\\u5929\\u874e\\u5c04\\u624b\\u9b54\\u7faf\";\n    let arr = [20, 19, 21, 21, 21, 22, 23, 23, 23, 23, 22, 22];\n    return s.substr(cMonth * 2 - (cDay < arr[cMonth - 1] ? 2 : 0), 2) + \"\\u5ea7\"; //座\n};\n/**\n * 传入公历(!)y年获得该年第n个节气的公历日期\n * @param y公历年(1900-2100)；n二十四节气中的第几个节气(1~24)；从n=1(小寒)算起\n * @return day Number\n * @eg:var _24 = calendar.getTerm(1987,3) ;//_24=4;意即1987年2月4日立春\n */\nconst getTerm = (y, n) => {\n    if (y < 1900 || y > 2100) {\n        return -1;\n    }\n    if (n < 1 || n > 24) {\n        return -1;\n    }\n    let _table = TermInfo[y - 1900];\n    let _info = [\n        parseInt('0x' + _table.substr(0, 5)).toString(),\n        parseInt('0x' + _table.substr(5, 5)).toString(),\n        parseInt('0x' + _table.substr(10, 5)).toString(),\n        parseInt('0x' + _table.substr(15, 5)).toString(),\n        parseInt('0x' + _table.substr(20, 5)).toString(),\n        parseInt('0x' + _table.substr(25, 5)).toString()\n    ];\n    var _calday = [\n        _info[0].substr(0, 1),\n        _info[0].substr(1, 2),\n        _info[0].substr(3, 1),\n        _info[0].substr(4, 2),\n        _info[1].substr(0, 1),\n        _info[1].substr(1, 2),\n        _info[1].substr(3, 1),\n        _info[1].substr(4, 2),\n        _info[2].substr(0, 1),\n        _info[2].substr(1, 2),\n        _info[2].substr(3, 1),\n        _info[2].substr(4, 2),\n        _info[3].substr(0, 1),\n        _info[3].substr(1, 2),\n        _info[3].substr(3, 1),\n        _info[3].substr(4, 2),\n        _info[4].substr(0, 1),\n        _info[4].substr(1, 2),\n        _info[4].substr(3, 1),\n        _info[4].substr(4, 2),\n        _info[5].substr(0, 1),\n        _info[5].substr(1, 2),\n        _info[5].substr(3, 1),\n        _info[5].substr(4, 2),\n    ];\n    return parseInt(_calday[n - 1]);\n};\n/**\n * 年份转生肖[!仅能大致转换] => 精确划分生肖分界线是“立春”\n * @param y year\n * @return Cn string\n * @eg:var animal = calendar.getAnimal(1987) ;//animal='兔'\n */\nconst getAnimal = (y) => {\n    return Animals[(y - 4) % 12];\n};\nexport { solarDays, solarFirstWeek, toAstro, getTerm, getAnimal };\n","references":["D:/Web/npm/yz-calendar-ts/src/data/Calendar.ts"]}
